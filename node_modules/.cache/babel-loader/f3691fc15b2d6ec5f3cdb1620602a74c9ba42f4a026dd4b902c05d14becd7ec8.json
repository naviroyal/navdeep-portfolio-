{"ast":null,"code":"var _jsxFileName = \"/home/navdeep/react/navdeep-portfolio-/src/Components/ParticlesBg/ParticlesBg.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport { particleBgColors } from \"../../assets/colors/particlesBg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ParticlesBg = _ref => {\n  _s();\n  let {\n    darkMode\n  } = _ref;\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(\"Particles loaded\", container);\n  }, []);\n  const {\n    background,\n    links,\n    particle\n  } = particleBgColors();\n  const [backgroundColor, setBgColor] = useState(background(darkMode));\n  const [particleColor, setParticleColor] = useState(particle(darkMode));\n  const [linksColor, setLinksColor] = useState(links(darkMode));\n  useEffect(() => {\n    setBgColor(background(darkMode));\n    setParticleColor(particle(darkMode));\n    setLinksColor(links(darkMode));\n  }, [darkMode, background, links, particle]);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    width: \"25%\",\n    options: {\n      fpsLimit: 144,\n      fullScreen: {\n        enable: false,\n        zIndex: -1\n      },\n      interactivity: {\n        detectsOn: \"window\",\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\"\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\"\n          },\n          resize: true\n        },\n        modes: {\n          bubble: {\n            distance: 40,\n            duration: 2,\n            opacity: 0.4,\n            size: 40\n          },\n          push: {\n            quantity: 4\n          },\n          repulse: {\n            distance: 150,\n            duration: 0.4\n          }\n        }\n      },\n      particles: {\n        color: {\n          value: particleColor\n        },\n        links: {\n          color: linksColor,\n          distance: 150,\n          enable: true,\n          opacity: 0.7,\n          width: 2,\n          triangles: {\n            enable: true,\n            color: linksColor,\n            opacity: 0.2\n          }\n        },\n        collisions: {\n          enable: true\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outMode: \"bounce\",\n          random: true,\n          speed: 6,\n          straight: false,\n          attract: {\n            enable: false,\n            rotateX: 600,\n            rotateY: 1200\n          }\n        },\n        number: {\n          density: {\n            enable: true,\n            value_area: 2000\n          },\n          value: 80\n        },\n        opacity: {\n          value: 0.9\n        },\n        shape: {\n          type: \"polygon\"\n        },\n        size: {\n          random: true,\n          value: 5\n        }\n      },\n      detectRetina: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticlesBg, \"sByjiUJ0BZEKPS9hDD7ylynxqnk=\");\n_c = ParticlesBg;\nvar _c;\n$RefreshReg$(_c, \"ParticlesBg\");","map":{"version":3,"names":["useCallback","useEffect","useState","Particles","loadFull","particleBgColors","ParticlesBg","darkMode","particlesInit","engine","particlesLoaded","container","console","log","background","links","particle","backgroundColor","setBgColor","particleColor","setParticleColor","linksColor","setLinksColor","fpsLimit","fullScreen","enable","zIndex","interactivity","detectsOn","events","onClick","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","width","triangles","collisions","move","direction","outMode","random","speed","straight","attract","rotateX","rotateY","number","density","value_area","shape","type","detectRetina"],"sources":["/home/navdeep/react/navdeep-portfolio-/src/Components/ParticlesBg/ParticlesBg.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport { particleBgColors } from \"../../assets/colors/particlesBg\";\n\nexport const ParticlesBg = ({ darkMode }) => {\n  const particlesInit = useCallback(async (engine) => {\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async (container) => {\n    await console.log(\"Particles loaded\", container);\n  }, []);\n\n  const { background, links, particle } = particleBgColors();\n\n  const [backgroundColor, setBgColor] = useState(background(darkMode));\n  const [particleColor, setParticleColor] = useState(particle(darkMode));\n  const [linksColor, setLinksColor] = useState(links(darkMode));\n\n  useEffect(() => {\n    setBgColor(background(darkMode));\n    setParticleColor(particle(darkMode));\n    setLinksColor(links(darkMode));\n  }, [darkMode, background, links, particle]);\n\n  return (\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      loaded={particlesLoaded}\n      width={\"25%\"}\n      options={{\n        fpsLimit: 144,\n        fullScreen: {\n          enable: false,\n          zIndex: -1,\n        },\n        interactivity: {\n          detectsOn: \"window\",\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"push\",\n            },\n            onHover: {\n              enable: true,\n              mode: \"repulse\",\n            },\n            resize: true,\n          },\n          modes: {\n            bubble: {\n              distance: 40,\n              duration: 2,\n              opacity: 0.4,\n              size: 40,\n            },\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 150,\n              duration: 0.4,\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: particleColor,\n          },\n          links: {\n            color: linksColor,\n            distance: 150,\n            enable: true,\n            opacity: 0.7,\n            width: 2,\n            triangles: {\n              enable: true,\n              color: linksColor,\n              opacity: 0.2,\n            },\n          },\n          collisions: {\n            enable: true,\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outMode: \"bounce\",\n            random: true,\n            speed: 6,\n            straight: false,\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200,\n            },\n          },\n          number: {\n            density: {\n              enable: true,\n              value_area: 2000,\n            },\n            value: 80,\n          },\n          opacity: {\n            value: 0.9,\n          },\n          shape: {\n            type: \"polygon\",\n          },\n          size: {\n            random: true,\n            value: 5,\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}